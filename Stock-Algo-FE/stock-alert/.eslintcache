[{"/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/index.js":"1","/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/App.js":"2","/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/StockFetchDisplay.js":"3","/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/Notification.js":"4"},{"size":153,"mtime":1612310946839,"results":"5","hashOfConfig":"6"},{"size":163,"mtime":1612310946838,"results":"7","hashOfConfig":"6"},{"size":4261,"mtime":1612456702045,"results":"8","hashOfConfig":"6"},{"size":1159,"mtime":1612455965766,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"dlqm8v",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/index.js",[],["20","21"],"/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/App.js",[],"/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/StockFetchDisplay.js",[],"/Users/johanozbek/Desktop/Stock-Algo/stock-alert/src/Notification.js",["22","23"],"import React, { useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { toast } from 'react-toastify';\n\n/**\n * Configuring the toast library for visual notifications\n */\ntoast.configure();\n\nfunction Notification(props) {\n  /**\n   * Getting the reference of the window speech synthesis and assigning it\n   */\n  const synthRef = React.useRef(window.speechSynthesis);\n\n  /**\n   * Use Effect - React hook that is called when component is rendered\n   * Set interval - This function is called every 30 seconds\n   * If user has not been notified about the stock, notify the user using a visual and audible notification\n   */\n  useEffect(() => {\n    setInterval(() => {\n      props.stocksNotified.map((stock) => {\n        toast(\"Buy Signal: \" + stock.name);\n        notify(\"Buy Signal: \" + stock.name)\n      }\n      );\n    }, 3_000);\n  }, []\n  );\n\n  /**\n   * Utters the notification text it recieves.\n   * @param {*} signalText \n   */\n  const notify = (signalText) => {\n    const utter = new SpeechSynthesisUtterance(signalText)\n    synthRef.current.speak(utter);\n  }\n  return (\n    <div>\n    </div>\n  );\n}\n\nexport default Notification;",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":23,"column":40,"nodeType":"30","messageId":"31","endLine":23,"endColumn":42},{"ruleId":"32","severity":1,"message":"33","line":29,"column":6,"nodeType":"34","endLine":29,"endColumn":8,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.stocksNotified'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [props.stocksNotified]",{"range":"41","text":"42"},[862,864],"[props.stocksNotified]"]